indexing:
- only check key of entry if there are hash collissions
- automatically re-balance hash map
- port flat hash map to C
- secondary indexes

compression:
- compress keys: store hash in key field of entry, and use beginning of data field to store actual key

storage:
- partially defragment database when entries deleted
- after defrag, all locations where more than ... bytes are dead get deleted from the db (entries after that moved into them)
- cache entries that are accessed a lot in memory
- endianess!

concurrency:
- use rwlock everywhere
- duplicate fp for each concurrent read  (`fdopen(dup(fd), "rb+")`)

testing:
- similar to put / get, but store more entries at a time
